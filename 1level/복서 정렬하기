import java.util.Arrays;
import java.util.Comparator;

class Solution {
    public int[] solution(int[] weights, String[] head2head) {
        int n = weights.length;
        int[] answer = new int[n];
        int win, battle, bigWin;
        double[][] result = new double[n][4];
        for(int i=0; i<n ;i++){
            win =0; battle=n; bigWin=0;
            result[i][0]=i+1;
            result[i][3]=weights[i];
            for(int j=0 ; j<n ; j++){
                if(head2head[i].charAt(j)=='N'){
                    battle-=1;
                }else if(head2head[i].charAt(j)=='W'){
                    win++;
                    if(weights[j]>weights[i]){
                        bigWin++;
                    }
                }
            }System.out.printf("%d, %d \n",win,battle);
            
            result[i][1]= battle!=0 ? (double)win/battle : 0;
            result[i][2]=bigWin;
            System.out.printf("%.2f, %.2f, %.2f, %.2f \n",result[i][0],result[i][1],result[i][2],result[i][3]);
        }
        
        Arrays.sort(result, new Comparator<double[]>() {
            @Override
            public int compare(double[] o1, double[] o2){
                if(o1[1] != o2[1]) return Double.compare(o2[1], o1[1]);
                if(o1[2] != o2[2]) return Double.compare(o2[2], o1[2]);
                if(o1[3] != o2[3]) return Double.compare(o2[3], o1[3]);
                return Double.compare(o1[0], o2[0]);
            }
        });
        
        // Arrays.sort(result, new Comparator<double[]>() {
        //     @Override
        //     public int compare(double[] o1, double[] o2){
        //         if(o1[1]==o2[1]){
        //             if(o1[2]==o2[2]){
        //                 if(o1[3]==o2[3]){
        //                     return Double.compare(o1[0], o2[0]);//o1[0] - o2[0];
        //                 }else{
        //                     return Double.compare(o2[3], o1[3]);//o2[3] - o1[3];
        //                 }
        //             }else{
        //                 return Double.compare(o2[2], o1[2]);//o2[2] - o1[2];
        //             }
        //         }else {
        //             return Double.compare(o2[1], o1[1]);//o2[1] - o1[1];
        //         }
        //     }
        // });
        
        // Arrays.sort(result, (o1, o2) -> {
        //     if(o1[1] != o2[1]) return Double.compare(o1[1], o2[1]);
        //     if(o1[2] != o2[2]) return Double.compare(o1[2], o2[2]);
        //     if(o1[3] != o2[3]) return Double.compare(o1[3], o2[3]);
        //     return o1[0] - o2[0];
        // }); //이건 안됨
        
        System.out.println();
        for(int i=0; i<n ; i++){
            answer[i]=(int)result[i][0];
            System.out.printf("%.2f, %.2f, %.2f, %.2f \n",result[i][0],result[i][1],result[i][2],result[i][3]);
        }
        return answer;
    }
}

//====================================================================================

import java.util.*;
class Solution {
    public int[] solution(int[] weights, String[] head2head) {
        int len = weights.length;
        int[][] rank = new int[len][4];
        for(int i = 0; i < len; i++) {
            int w = weights[i], cnt = 0, win = 0, over = 0;
            for(int j = 0; j < len; j++) {
                char c = head2head[i].charAt(j);
                cnt += c == 'N' ? 0 : 1;
                win += c == 'W' ? 1 : 0;
                over += c == 'W' && weights[i] < weights[j] ? 1 : 0;
            }
            rank[i][0] = i + 1;
            rank[i][1] = (int)((double)win / cnt * 10000000);
            rank[i][2] = over;
            rank[i][3] = weights[i];
        }
        Arrays.sort(rank, (a, b) -> {
            if(a[1] != b[1]) return b[1] - a[1];
            if(a[2] != b[2]) return b[2] - a[2];
            if(a[3] != b[3]) return b[3] - a[3];
            return a[0] - b[0];
        });
        int[] answer = new int[len];
        for(int i = 0; i < len; i++) answer[i] = (int)rank[i][0];
        return answer;
    }
}

//==============================================================
