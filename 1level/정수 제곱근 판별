class Solution {
    public long solution(long n) {
        for(long i =1 ; i<=(n/2+1) ; i++){
            if(n==i*i){
                return (i+1)*(i+1);
            }
        }
        return -1;
    }
}

//=======================================

class Solution {
  public long solution(long n) {
      if (Math.pow((int)Math.sqrt(n), 2) == n) {
            return (long) Math.pow(Math.sqrt(n) + 1, 2);
        }

        return -1;
  }
}

//========================================

class Solution {
  public long solution(long n) {

    double i = Math.sqrt(n);

    return Math.floor(i) == i ? (long) Math.pow(i + 1, 2) : -1; //floor(x) : 내림 그냥 // 소수점이 있는지 확인하는 용도
  }
}

//=======================================

class Solution {
  public long solution(long n) {
      if(n==1){
          return 4; // (1+1)*(1+1) = 4
      }
      for(long i=2;i<n;i++){
          if(n/i == i && n%i ==0){
              return (i+1)*(i+1);
          }
      }
      return -1;
  }
}
